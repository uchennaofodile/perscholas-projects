spring.datasource.url=jdbc:h2:mem:test
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
#Spring Boot uses Hibernate for JPA implementation, we configure H2Dialect for H2 Database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto= update
spring.jpa.defer-datasource-initialization=true
# show queries on console
spring.jpa.show-sql=true
spring.h2.console.enabled=true
spring.h2.console.path=/h2-ui

#spring.datasource.url=jdbc:mysql://localhost:3306/sys
#spring.datasource.username= root
#spring.datasource.password= password
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
#spring.datasource.driver-class-name= com.mysql.cj.jdbc.Driver
#
##script-based initialization is performed by default only for 
##embedded databases, to always initialize a database using 
##scripts, we'll have to use:
#spring.sql.init.mode=always
## Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto= create-drop
##If we still want to have both Hibernate automatic schema 
##generation in conjugation with script-based schema creation 
##and data population, we'll have to use:
##We had to use this for H2 as well to defer data.sql
##spring.jpa.defer-datasource-initialization=true
#
## show queries on console
##spring.jpa.show-sql=true




